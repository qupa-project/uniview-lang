fn test(a: int, b: int) {
	if (a > b) {
		printf("%s", "Greater\n");
	} elif (a < b) {
		printf("%s", "Lesser\n");
	} elif (a > b) {
		printf("%s", "Logic error, should have already been caught\n");
	} else {
		printf("%s", "Equal\n");
	}

	return;
}


struct Test {}

fn Consume(t: Test) {
	return;
}

fn UnifiedUndefined() {
	let t := new Test {};

	if (true) {
		Consume(t);
	} else {
		Consume(t);
	}

	return;
}

fn main(): int {
	test(1, 3);
	test(2, 2);
	test(3, 1);

	return 0;
}