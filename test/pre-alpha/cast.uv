fn CheckOverFlow(): int {
	let a := cast#[u8](128);
	let b := cast#[i8](a);

	if (b != cast#[i8](127)) {
		return 1;
	}


	a = cast#[u8](256);
	b = cast#[i8](a);
	if (b != cast#[i8](127)) {
		return 1;
	}


	b = cast#[i8](1024);
	if (b != cast#[i8](127)) {
		return 1;
	}

	let c := cast#[i16](9223372036854780000);
	if (c != cast#[i16](32767)) {
		return 1;
	}

	let d := cast#[i32](9223372036854780000);
	if (d != cast#[i32](2147483647)) {
		return 1;
	}

	return 0;
}

fn CheckUnderflow(): int {
	let a := cast#[i8](-1);
	let b := cast#[u8](a);

	if (b != cast#[u8](0)) {
		return 1;
	}


	a = cast#[i8](0);
	b = cast#[u8](a);
	if (b != cast#[u8](0)) {
		return 1;
	}


	b = cast#[u8](1024);
	if (b != cast#[u8](0)) {
		return 1;
	}

	return 0;
}


fn main (): int {
	let res := CheckOverFlow();
	if (res == -1) {
		printf("%s", "Failed overflow check\n");
		return 1;
	}


	res = CheckUnderflow();
	if (res == -1) {
		printf("%s", "Failed underflow check\n");
		return 1;
	}

	return 0;
}