external assume {
	fn fopen_s (fd: @File, path: cstring, access: cstring);
	fn fgetc (fd: addr_space): i8;
	fn fclose (fd: addr_space): int;
	fn feof(fd: addr_space): int;
	fn fflush(fd: addr_space);
	fn fsetpos(fd: addr_space, pos: int);
	fn ftell(fd: addr_space): int;
}


class File {
	ptr: addr_space;

	fn New(path: cstring, access: cstring): File {
		let this = Blank#[File]();
		fopen_s(@this, path, access);

		return this;
	}

	fn GetChar(this: @File): i8 {
		return fgetc(this.ptr);
	}

	fn IsEOF(this: #File): bool {
		return feof(this.ptr) == 1;
	}

	fn SetPos(this: @File, pos: int) {
		fsetpos(this.ptr, pos);
	}

	fn GetPos(this: #File): int {
		return ftell(this.ptr);
	}

	fn Flush(this: @File) {
		fflush(this.ptr);
	}

	fn Delete(this: File) {
		fclose(this.ptr);
		delete this.ptr;
	}
}